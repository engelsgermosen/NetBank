@{
    ViewData["Title"] = "Agregando productos";
}

@using NetBank.Core.Application.ViewModels.Product;
@using NetBank.Core.Domain.Enums
@model List<ProductViewModel>


<div class="container my-4">
    <!-- Mensaje si existe -->
    <div class="row">
        @if (!string.IsNullOrWhiteSpace(ViewBag.Message))
        {
            <div class="col-12 col-lg-8 mx-auto alert text-dark @ViewBag.MessageType" role="alert">
                @ViewBag.Message
            </div>
        }
    </div>

    <!-- Botón para agregar producto -->
    <div class="row mb-3">
        <div class="col-12">
            <a asp-action="Create"
               asp-controller="Product"
               asp-route-userId="@Model?.FirstOrDefault()?.UserId"
               class="btn btn-primary float-end">
                Agregar producto
            </a>
        </div>
    </div>

    <!-- Sección de productos -->
    <div class="row g-3">
        @if (Model?.Count > 0 && Model != null)
        {
            @foreach (var i in Model)
            {
                <div class="col-12 col-md-6 col-lg-4">
                    <div class="card shadow-sm h-100">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">@i.ProductType</h5>
                            @if (i.ProductType == ProductType.CuentaAhorro && i.IsMain)
                            {
                                <span class="bg-success text-white p-2 rounded">Principal</span>
                            }
                        </div>
                        <div class="card-body">
                            @switch (i.ProductType)
                            {
                                case ProductType.CuentaAhorro:
                                    <p class="mb-2 fw-bold">Balance: @i.Balance</p>
                                    break;
                                case ProductType.CreditCard:
                                    <p class="mb-2 fw-bold">Límite de crédito: @i.CreditLimit</p>
                                    <p class="mb-2">Debe: @(i.AmountOwed ?? 0)</p>
                                    break;
                                case ProductType.Prestamo:
                                    <p class="mb-2">Monto adeudado: @(i.AmountOwed ?? 0)</p>
                                    break;
                            }
                        </div>
                        <div class="card-footer d-flex justify-content-between align-items-center">
                            <span>@i.AccountNumber</span>
                            <!-- Mostrar botón "Delete" solo si no es la cuenta principal de ahorro -->
                            @if (i.ProductType != ProductType.CuentaAhorro || !i.IsMain)
                            {
                                <a asp-route-id="@i.AccountNumber"
                                   asp-route-userId="@i.UserId"
                                   asp-route-productType="@i.ProductType"
                                   asp-action="Delete"
                                   asp-controller="Product"
                                   class="btn btn-danger">
                                    Delete
                                </a>
                            }
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="alert alert-secondary text-center" role="alert">
                    No hay productos registrados.
                </div>
            </div>
        }
    </div>
</div>
